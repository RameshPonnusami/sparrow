/*
 * generated by Xtext 2.12.0
 */
grammar InternalSparrow;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.etl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.etl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.etl.services.SparrowGrammarAccess;

}

@parser::members {

 	private SparrowGrammarAccess grammarAccess;

    public InternalSparrowParser(TokenStream input, SparrowGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Process";
   	}

   	@Override
   	protected SparrowGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	iv_ruleProcess=ruleProcess
	{ $current=$iv_ruleProcess.current; }
	EOF;

// Rule Process
ruleProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='process'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcessAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getTryTryParserRuleCall_3_0());
				}
				lv_try_3_0=ruleTry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					set(
						$current,
						"try",
						lv_try_3_0,
						"org.etl.Sparrow.Try");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getCatchCatchParserRuleCall_4_0());
				}
				lv_catch_4_0=ruleCatch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					set(
						$current,
						"catch",
						lv_catch_4_0,
						"org.etl.Sparrow.Catch");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getFinallyFinallyParserRuleCall_5_0());
				}
				lv_finally_5_0=ruleFinally
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					set(
						$current,
						"finally",
						lv_finally_5_0,
						"org.etl.Sparrow.Finally");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTry
entryRuleTry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTryRule()); }
	iv_ruleTry=ruleTry
	{ $current=$iv_ruleTry.current; }
	EOF;

// Rule Try
ruleTry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='try'
		{
			newLeafNode(otherlv_0, grammarAccess.getTryAccess().getTryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTryAccess().getActionActionParserRuleCall_3_0());
				}
				lv_action_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTryRule());
					}
					add(
						$current,
						"action",
						lv_action_3_0,
						"org.etl.Sparrow.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTryAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFinally
entryRuleFinally returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinallyRule()); }
	iv_ruleFinally=ruleFinally
	{ $current=$iv_ruleFinally.current; }
	EOF;

// Rule Finally
ruleFinally returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='finally'
		{
			newLeafNode(otherlv_0, grammarAccess.getFinallyAccess().getFinallyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFinallyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFinallyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFinallyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFinallyAccess().getActionActionParserRuleCall_3_0());
				}
				lv_action_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFinallyRule());
					}
					add(
						$current,
						"action",
						lv_action_3_0,
						"org.etl.Sparrow.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFinallyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCatch
entryRuleCatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCatchRule()); }
	iv_ruleCatch=ruleCatch
	{ $current=$iv_ruleCatch.current; }
	EOF;

// Rule Catch
ruleCatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='catch'
		{
			newLeafNode(otherlv_0, grammarAccess.getCatchAccess().getCatchKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCatchAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCatchRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCatchAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCatchAccess().getActionActionParserRuleCall_3_0());
				}
				lv_action_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCatchRule());
					}
					add(
						$current,
						"action",
						lv_action_3_0,
						"org.etl.Sparrow.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getCatchAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getCopydataParserRuleCall_0());
		}
		this_Copydata_0=ruleCopydata
		{
			$current = $this_Copydata_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getLoadCsvParserRuleCall_1());
		}
		this_LoadCsv_1=ruleLoadCsv
		{
			$current = $this_LoadCsv_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getWriteCsvParserRuleCall_2());
		}
		this_WriteCsv_2=ruleWriteCsv
		{
			$current = $this_WriteCsv_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getTransformParserRuleCall_3());
		}
		this_Transform_3=ruleTransform
		{
			$current = $this_Transform_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getGooglecalParserRuleCall_4());
		}
		this_Googlecal_4=ruleGooglecal
		{
			$current = $this_Googlecal_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSlackParserRuleCall_5());
		}
		this_Slack_5=ruleSlack
		{
			$current = $this_Slack_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSmsParserRuleCall_6());
		}
		this_Sms_6=ruleSms
		{
			$current = $this_Sms_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getUpdatedauditParserRuleCall_7());
		}
		this_Updatedaudit_7=ruleUpdatedaudit
		{
			$current = $this_Updatedaudit_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getCallprocessParserRuleCall_8());
		}
		this_Callprocess_8=ruleCallprocess
		{
			$current = $this_Callprocess_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCallprocess
entryRuleCallprocess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallprocessRule()); }
	iv_ruleCallprocess=ruleCallprocess
	{ $current=$iv_ruleCallprocess.current; }
	EOF;

// Rule Callprocess
ruleCallprocess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='callprocess'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallprocessAccess().getCallprocessKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getCallprocessAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCallprocessAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallprocessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='target'
		{
			newLeafNode(otherlv_3, grammarAccess.getCallprocessAccess().getTargetKeyword_3());
		}
		(
			(
				lv_target_4_0=RULE_STRING
				{
					newLeafNode(lv_target_4_0, grammarAccess.getCallprocessAccess().getTargetSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallprocessRule());
					}
					setWithLastConsumed(
						$current,
						"target",
						lv_target_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='using'
		{
			newLeafNode(otherlv_5, grammarAccess.getCallprocessAccess().getUsingKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getCallprocessAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallprocessAccess().getValueSelectStatementParserRuleCall_7_0());
				}
				lv_value_7_0=ruleSelectStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallprocessRule());
					}
					set(
						$current,
						"value",
						lv_value_7_0,
						"org.etl.Sparrow.SelectStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getCallprocessAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleUpdatedaudit
entryRuleUpdatedaudit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdatedauditRule()); }
	iv_ruleUpdatedaudit=ruleUpdatedaudit
	{ $current=$iv_ruleUpdatedaudit.current; }
	EOF;

// Rule Updatedaudit
ruleUpdatedaudit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='log'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdatedauditAccess().getLogKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdatedauditAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getUpdatedauditAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdatedauditRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='logto'
		{
			newLeafNode(otherlv_3, grammarAccess.getUpdatedauditAccess().getLogtoKeyword_3());
		}
		(
			(
				lv_logsink_4_0=RULE_STRING
				{
					newLeafNode(lv_logsink_4_0, grammarAccess.getUpdatedauditAccess().getLogsinkSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdatedauditRule());
					}
					setWithLastConsumed(
						$current,
						"logsink",
						lv_logsink_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='using'
		{
			newLeafNode(otherlv_5, grammarAccess.getUpdatedauditAccess().getUsingKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getUpdatedauditAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdatedauditAccess().getValueSelectStatementParserRuleCall_7_0());
				}
				lv_value_7_0=ruleSelectStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdatedauditRule());
					}
					set(
						$current,
						"value",
						lv_value_7_0,
						"org.etl.Sparrow.SelectStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getUpdatedauditAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSms
entryRuleSms returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmsRule()); }
	iv_ruleSms=ruleSms
	{ $current=$iv_ruleSms.current; }
	EOF;

// Rule Sms
ruleSms returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sms'
		{
			newLeafNode(otherlv_0, grammarAccess.getSmsAccess().getSmsKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getSmsAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSmsAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSmsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='for'
		{
			newLeafNode(otherlv_3, grammarAccess.getSmsAccess().getForKeyword_3());
		}
		(
			(
				lv_target_4_0=RULE_STRING
				{
					newLeafNode(lv_target_4_0, grammarAccess.getSmsAccess().getTargetSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSmsRule());
					}
					setWithLastConsumed(
						$current,
						"target",
						lv_target_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='using'
		{
			newLeafNode(otherlv_5, grammarAccess.getSmsAccess().getUsingKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getSmsAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				lv_value_7_0=RULE_STRING
				{
					newLeafNode(lv_value_7_0, grammarAccess.getSmsAccess().getValueSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSmsRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSmsAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSlack
entryRuleSlack returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSlackRule()); }
	iv_ruleSlack=ruleSlack
	{ $current=$iv_ruleSlack.current; }
	EOF;

// Rule Slack
ruleSlack returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='slack'
		{
			newLeafNode(otherlv_0, grammarAccess.getSlackAccess().getSlackKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getSlackAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSlackAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlackRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getSlackAccess().getToKeyword_3());
		}
		(
			(
				lv_team_4_0=RULE_STRING
				{
					newLeafNode(lv_team_4_0, grammarAccess.getSlackAccess().getTeamSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlackRule());
					}
					setWithLastConsumed(
						$current,
						"team",
						lv_team_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='on'
		{
			newLeafNode(otherlv_5, grammarAccess.getSlackAccess().getOnKeyword_5());
		}
		(
			(
				lv_channel_6_0=RULE_STRING
				{
					newLeafNode(lv_channel_6_0, grammarAccess.getSlackAccess().getChannelSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlackRule());
					}
					setWithLastConsumed(
						$current,
						"channel",
						lv_channel_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='using'
		{
			newLeafNode(otherlv_7, grammarAccess.getSlackAccess().getUsingKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getSlackAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				lv_value_9_0=RULE_STRING
				{
					newLeafNode(lv_value_9_0, grammarAccess.getSlackAccess().getValueSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlackRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSlackAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleGooglecal
entryRuleGooglecal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGooglecalRule()); }
	iv_ruleGooglecal=ruleGooglecal
	{ $current=$iv_ruleGooglecal.current; }
	EOF;

// Rule Googlecal
ruleGooglecal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='googlecal'
		{
			newLeafNode(otherlv_0, grammarAccess.getGooglecalAccess().getGooglecalKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getGooglecalAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGooglecalAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='for-cal'
		{
			newLeafNode(otherlv_3, grammarAccess.getGooglecalAccess().getForCalKeyword_3());
		}
		(
			(
				lv_calid_4_0=RULE_STRING
				{
					newLeafNode(lv_calid_4_0, grammarAccess.getGooglecalAccess().getCalidSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"calid",
						lv_calid_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='secured-by'
		{
			newLeafNode(otherlv_5, grammarAccess.getGooglecalAccess().getSecuredByKeyword_5());
		}
		(
			(
				lv_authstore_6_0=RULE_STRING
				{
					newLeafNode(lv_authstore_6_0, grammarAccess.getGooglecalAccess().getAuthstoreSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"authstore",
						lv_authstore_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='through-user'
		{
			newLeafNode(otherlv_7, grammarAccess.getGooglecalAccess().getThroughUserKeyword_7());
		}
		(
			(
				lv_useraccount_8_0=RULE_STRING
				{
					newLeafNode(lv_useraccount_8_0, grammarAccess.getGooglecalAccess().getUseraccountSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"useraccount",
						lv_useraccount_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='with-title'
		{
			newLeafNode(otherlv_9, grammarAccess.getGooglecalAccess().getWithTitleKeyword_9());
		}
		(
			(
				lv_title_10_0=RULE_STRING
				{
					newLeafNode(lv_title_10_0, grammarAccess.getGooglecalAccess().getTitleSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='from'
		{
			newLeafNode(otherlv_11, grammarAccess.getGooglecalAccess().getFromKeyword_11());
		}
		(
			(
				lv_start_12_0=RULE_STRING
				{
					newLeafNode(lv_start_12_0, grammarAccess.getGooglecalAccess().getStartSTRINGTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_13='to'
		{
			newLeafNode(otherlv_13, grammarAccess.getGooglecalAccess().getToKeyword_13());
		}
		(
			(
				lv_end_14_0=RULE_STRING
				{
					newLeafNode(lv_end_14_0, grammarAccess.getGooglecalAccess().getEndSTRINGTerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_14_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_15='repeat'
		{
			newLeafNode(otherlv_15, grammarAccess.getGooglecalAccess().getRepeatKeyword_15());
		}
		(
			(
				lv_notify_16_0=RULE_STRING
				{
					newLeafNode(lv_notify_16_0, grammarAccess.getGooglecalAccess().getNotifySTRINGTerminalRuleCall_16_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"notify",
						lv_notify_16_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_17='using'
		{
			newLeafNode(otherlv_17, grammarAccess.getGooglecalAccess().getUsingKeyword_17());
		}
		otherlv_18='{'
		{
			newLeafNode(otherlv_18, grammarAccess.getGooglecalAccess().getLeftCurlyBracketKeyword_18());
		}
		(
			(
				lv_value_19_0=RULE_STRING
				{
					newLeafNode(lv_value_19_0, grammarAccess.getGooglecalAccess().getValueSTRINGTerminalRuleCall_19_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGooglecalRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_19_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getGooglecalAccess().getRightCurlyBracketKeyword_20());
		}
	)
;

// Entry rule entryRuleCopydata
entryRuleCopydata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCopydataRule()); }
	iv_ruleCopydata=ruleCopydata
	{ $current=$iv_ruleCopydata.current; }
	EOF;

// Rule Copydata
ruleCopydata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='copydata'
		{
			newLeafNode(otherlv_0, grammarAccess.getCopydataAccess().getCopydataKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getCopydataAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCopydataAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCopydataRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getCopydataAccess().getFromKeyword_3());
		}
		(
			(
				lv_source_4_0=RULE_STRING
				{
					newLeafNode(lv_source_4_0, grammarAccess.getCopydataAccess().getSourceSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCopydataRule());
					}
					setWithLastConsumed(
						$current,
						"source",
						lv_source_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getCopydataAccess().getToKeyword_5());
		}
		(
			(
				lv_to_6_0=RULE_STRING
				{
					newLeafNode(lv_to_6_0, grammarAccess.getCopydataAccess().getToSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCopydataRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='using'
		{
			newLeafNode(otherlv_7, grammarAccess.getCopydataAccess().getUsingKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getCopydataAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCopydataAccess().getValueSelectStatementParserRuleCall_9_0());
				}
				lv_value_9_0=ruleSelectStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCopydataRule());
					}
					set(
						$current,
						"value",
						lv_value_9_0,
						"org.etl.Sparrow.SelectStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getCopydataAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleWriteCsv
entryRuleWriteCsv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteCsvRule()); }
	iv_ruleWriteCsv=ruleWriteCsv
	{ $current=$iv_ruleWriteCsv.current; }
	EOF;

// Rule WriteCsv
ruleWriteCsv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='writecsv'
		{
			newLeafNode(otherlv_0, grammarAccess.getWriteCsvAccess().getWritecsvKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getWriteCsvAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getWriteCsvAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCsvRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getWriteCsvAccess().getFromKeyword_3());
		}
		(
			(
				lv_source_4_0=RULE_STRING
				{
					newLeafNode(lv_source_4_0, grammarAccess.getWriteCsvAccess().getSourceSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCsvRule());
					}
					setWithLastConsumed(
						$current,
						"source",
						lv_source_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getWriteCsvAccess().getToKeyword_5());
		}
		(
			(
				lv_to_6_0=RULE_STRING
				{
					newLeafNode(lv_to_6_0, grammarAccess.getWriteCsvAccess().getToSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCsvRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='with'
		{
			newLeafNode(otherlv_7, grammarAccess.getWriteCsvAccess().getWithKeyword_7());
		}
		(
			(
				lv_delim_8_0=RULE_STRING
				{
					newLeafNode(lv_delim_8_0, grammarAccess.getWriteCsvAccess().getDelimSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCsvRule());
					}
					setWithLastConsumed(
						$current,
						"delim",
						lv_delim_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='using'
		{
			newLeafNode(otherlv_9, grammarAccess.getWriteCsvAccess().getUsingKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getWriteCsvAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWriteCsvAccess().getValueSelectStatementParserRuleCall_11_0());
				}
				lv_value_11_0=ruleSelectStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWriteCsvRule());
					}
					set(
						$current,
						"value",
						lv_value_11_0,
						"org.etl.Sparrow.SelectStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getWriteCsvAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleLoadCsv
entryRuleLoadCsv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadCsvRule()); }
	iv_ruleLoadCsv=ruleLoadCsv
	{ $current=$iv_ruleLoadCsv.current; }
	EOF;

// Rule LoadCsv
ruleLoadCsv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='loadcsv'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoadCsvAccess().getLoadcsvKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoadCsvAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLoadCsvAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadCsvRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoadCsvAccess().getFromKeyword_3());
		}
		(
			(
				lv_source_4_0=RULE_STRING
				{
					newLeafNode(lv_source_4_0, grammarAccess.getLoadCsvAccess().getSourceSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadCsvRule());
					}
					setWithLastConsumed(
						$current,
						"source",
						lv_source_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getLoadCsvAccess().getToKeyword_5());
		}
		(
			(
				lv_to_6_0=RULE_STRING
				{
					newLeafNode(lv_to_6_0, grammarAccess.getLoadCsvAccess().getToSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadCsvRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='with'
		{
			newLeafNode(otherlv_7, grammarAccess.getLoadCsvAccess().getWithKeyword_7());
		}
		(
			(
				lv_delim_8_0=RULE_STRING
				{
					newLeafNode(lv_delim_8_0, grammarAccess.getLoadCsvAccess().getDelimSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadCsvRule());
					}
					setWithLastConsumed(
						$current,
						"delim",
						lv_delim_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='using'
		{
			newLeafNode(otherlv_9, grammarAccess.getLoadCsvAccess().getUsingKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getLoadCsvAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadCsvAccess().getValueSelectStatementParserRuleCall_11_0());
				}
				lv_value_11_0=ruleSelectStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadCsvRule());
					}
					set(
						$current,
						"value",
						lv_value_11_0,
						"org.etl.Sparrow.SelectStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getLoadCsvAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleTransform
entryRuleTransform returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformRule()); }
	iv_ruleTransform=ruleTransform
	{ $current=$iv_ruleTransform.current; }
	EOF;

// Rule Transform
ruleTransform returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transform'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransformAccess().getTransformKeyword_0());
		}
		otherlv_1='as'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransformAccess().getAsKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTransformAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransformRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransformAccess().getOnKeyword_3());
		}
		(
			(
				lv_on_4_0=RULE_STRING
				{
					newLeafNode(lv_on_4_0, grammarAccess.getTransformAccess().getOnSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransformRule());
					}
					setWithLastConsumed(
						$current,
						"on",
						lv_on_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='using'
		{
			newLeafNode(otherlv_5, grammarAccess.getTransformAccess().getUsingKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getTransformAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformAccess().getValueNonSelectStatementParserRuleCall_7_0());
				}
				lv_value_7_0=ruleNonSelectStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformRule());
					}
					add(
						$current,
						"value",
						lv_value_7_0,
						"org.etl.Sparrow.NonSelectStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getTransformAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSelectStatement
entryRuleSelectStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSelectStatementRule()); }
	iv_ruleSelectStatement=ruleSelectStatement
	{ $current=$iv_ruleSelectStatement.current.getText(); }
	EOF;

// Rule SelectStatement
ruleSelectStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getSelectStatementAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleNonSelectStatement
entryRuleNonSelectStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNonSelectStatementRule()); }
	iv_ruleNonSelectStatement=ruleNonSelectStatement
	{ $current=$iv_ruleNonSelectStatement.current.getText(); }
	EOF;

// Rule NonSelectStatement
ruleNonSelectStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getNonSelectStatementAccess().getSTRINGTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
