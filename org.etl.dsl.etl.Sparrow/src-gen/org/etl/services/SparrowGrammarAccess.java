/*
 * generated by Xtext 2.12.0
 */
package org.etl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SparrowGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Process");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTryTryParserRuleCall_3_0 = (RuleCall)cTryAssignment_3.eContents().get(0);
		private final Assignment cCatchAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCatchCatchParserRuleCall_4_0 = (RuleCall)cCatchAssignment_4.eContents().get(0);
		private final Assignment cFinallyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFinallyFinallyParserRuleCall_5_0 = (RuleCall)cFinallyAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Process:
		//	'process' name=STRING
		//	'{'
		//	try=Try
		//	catch=Catch
		//	finally=Finally
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'process' name=STRING '{' try=Try catch=Catch finally=Finally '}'
		public Group getGroup() { return cGroup; }
		
		//'process'
		public Keyword getProcessKeyword_0() { return cProcessKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//try=Try
		public Assignment getTryAssignment_3() { return cTryAssignment_3; }
		
		//Try
		public RuleCall getTryTryParserRuleCall_3_0() { return cTryTryParserRuleCall_3_0; }
		
		//catch=Catch
		public Assignment getCatchAssignment_4() { return cCatchAssignment_4; }
		
		//Catch
		public RuleCall getCatchCatchParserRuleCall_4_0() { return cCatchCatchParserRuleCall_4_0; }
		
		//finally=Finally
		public Assignment getFinallyAssignment_5() { return cFinallyAssignment_5; }
		
		//Finally
		public RuleCall getFinallyFinallyParserRuleCall_5_0() { return cFinallyFinallyParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Try");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionActionParserRuleCall_3_0 = (RuleCall)cActionAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Try:
		//	'try' name=ID
		//	'{'
		//	action+=Action*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'try' name=ID '{' action+=Action* '}'
		public Group getGroup() { return cGroup; }
		
		//'try'
		public Keyword getTryKeyword_0() { return cTryKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//action+=Action*
		public Assignment getActionAssignment_3() { return cActionAssignment_3; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_3_0() { return cActionActionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FinallyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Finally");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFinallyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionActionParserRuleCall_3_0 = (RuleCall)cActionAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Finally:
		//	'finally' name=ID
		//	'{'
		//	action+=Action*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'finally' name=ID '{' action+=Action* '}'
		public Group getGroup() { return cGroup; }
		
		//'finally'
		public Keyword getFinallyKeyword_0() { return cFinallyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//action+=Action*
		public Assignment getActionAssignment_3() { return cActionAssignment_3; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_3_0() { return cActionActionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Catch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCatchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionActionParserRuleCall_3_0 = (RuleCall)cActionAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Catch:
		//	'catch' name=ID
		//	'{'
		//	action+=Action*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'catch' name=ID '{' action+=Action* '}'
		public Group getGroup() { return cGroup; }
		
		//'catch'
		public Keyword getCatchKeyword_0() { return cCatchKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//action+=Action*
		public Assignment getActionAssignment_3() { return cActionAssignment_3; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_3_0() { return cActionActionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCopydataParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLoadCsvParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWriteCsvParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTransformParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGooglecalParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSlackParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSmsParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cUpdatedauditParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cCallprocessParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cFetchParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//Action:
		//	Copydata
		//	| LoadCsv
		//	| WriteCsv
		//	| Transform
		//	| Googlecal
		//	| Slack
		//	| Sms
		//	| Updatedaudit
		//	| Callprocess
		//	| Fetch;
		@Override public ParserRule getRule() { return rule; }
		
		//Copydata | LoadCsv | WriteCsv | Transform | Googlecal | Slack | Sms | Updatedaudit | Callprocess | Fetch
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Copydata
		public RuleCall getCopydataParserRuleCall_0() { return cCopydataParserRuleCall_0; }
		
		//LoadCsv
		public RuleCall getLoadCsvParserRuleCall_1() { return cLoadCsvParserRuleCall_1; }
		
		//WriteCsv
		public RuleCall getWriteCsvParserRuleCall_2() { return cWriteCsvParserRuleCall_2; }
		
		//Transform
		public RuleCall getTransformParserRuleCall_3() { return cTransformParserRuleCall_3; }
		
		//Googlecal
		public RuleCall getGooglecalParserRuleCall_4() { return cGooglecalParserRuleCall_4; }
		
		//Slack
		public RuleCall getSlackParserRuleCall_5() { return cSlackParserRuleCall_5; }
		
		//Sms
		public RuleCall getSmsParserRuleCall_6() { return cSmsParserRuleCall_6; }
		
		//Updatedaudit
		public RuleCall getUpdatedauditParserRuleCall_7() { return cUpdatedauditParserRuleCall_7; }
		
		//Callprocess
		public RuleCall getCallprocessParserRuleCall_8() { return cCallprocessParserRuleCall_8; }
		
		//Fetch
		public RuleCall getFetchParserRuleCall_9() { return cFetchParserRuleCall_9; }
	}
	public class FetchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Fetch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionSTRINGTerminalRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Fetch:
		//	'assign' 'as' name=STRING 'source' source=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'assign' 'as' name=STRING 'source' source=STRING 'using' '{' value=SelectStatement '}' 'on-condition' condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'assign'
		public Keyword getAssignKeyword_0() { return cAssignKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'source'
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_7_0() { return cValueSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=STRING
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_10_0() { return cConditionSTRINGTerminalRuleCall_10_0; }
	}
	public class CallprocessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Callprocess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallprocessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTargetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetSTRINGTerminalRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionSTRINGTerminalRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Callprocess:
		//	'callprocess' 'as' name=STRING 'target' target=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'callprocess' 'as' name=STRING 'target' target=STRING 'using' '{' value=SelectStatement '}' 'on-condition'
		//condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'callprocess'
		public Keyword getCallprocessKeyword_0() { return cCallprocessKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'target'
		public Keyword getTargetKeyword_3() { return cTargetKeyword_3; }
		
		//target=STRING
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_4_0() { return cTargetSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_7_0() { return cValueSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=STRING
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_10_0() { return cConditionSTRINGTerminalRuleCall_10_0; }
	}
	public class UpdatedauditElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Updatedaudit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLogKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLogtoKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLogsinkAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLogsinkSTRINGTerminalRuleCall_4_0 = (RuleCall)cLogsinkAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Updatedaudit:
		//	'log' 'as' name=STRING 'logto' logsink=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'log' 'as' name=STRING 'logto' logsink=STRING 'using' '{' value=SelectStatement '}'
		public Group getGroup() { return cGroup; }
		
		//'log'
		public Keyword getLogKeyword_0() { return cLogKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'logto'
		public Keyword getLogtoKeyword_3() { return cLogtoKeyword_3; }
		
		//logsink=STRING
		public Assignment getLogsinkAssignment_4() { return cLogsinkAssignment_4; }
		
		//STRING
		public RuleCall getLogsinkSTRINGTerminalRuleCall_4_0() { return cLogsinkSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_7_0() { return cValueSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class SmsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Sms");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSmsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cForKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetSTRINGTerminalRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSTRINGTerminalRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionSTRINGTerminalRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Sms:
		//	'sms' 'as' name=STRING 'for' target=STRING 'using'
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'sms' 'as' name=STRING 'for' target=STRING 'using' '{' value=STRING '}' 'on-condition' condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'sms'
		public Keyword getSmsKeyword_0() { return cSmsKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'for'
		public Keyword getForKeyword_3() { return cForKeyword_3; }
		
		//target=STRING
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_4_0() { return cTargetSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value=STRING
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_7_0() { return cValueSTRINGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=STRING
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_10_0() { return cConditionSTRINGTerminalRuleCall_10_0; }
	}
	public class SlackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Slack");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSlackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTeamAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTeamSTRINGTerminalRuleCall_4_0 = (RuleCall)cTeamAssignment_4.eContents().get(0);
		private final Keyword cOnKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cChannelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cChannelSTRINGTerminalRuleCall_6_0 = (RuleCall)cChannelAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueSTRINGTerminalRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cOnConditionKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConditionSTRINGTerminalRuleCall_12_0 = (RuleCall)cConditionAssignment_12.eContents().get(0);
		
		//Slack:
		//	'slack' 'as' name=STRING 'to' team=STRING 'on' channel=STRING 'using'
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'slack' 'as' name=STRING 'to' team=STRING 'on' channel=STRING 'using' '{' value=STRING '}' 'on-condition'
		//condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'slack'
		public Keyword getSlackKeyword_0() { return cSlackKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'to'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//team=STRING
		public Assignment getTeamAssignment_4() { return cTeamAssignment_4; }
		
		//STRING
		public RuleCall getTeamSTRINGTerminalRuleCall_4_0() { return cTeamSTRINGTerminalRuleCall_4_0; }
		
		//'on'
		public Keyword getOnKeyword_5() { return cOnKeyword_5; }
		
		//channel=STRING
		public Assignment getChannelAssignment_6() { return cChannelAssignment_6; }
		
		//STRING
		public RuleCall getChannelSTRINGTerminalRuleCall_6_0() { return cChannelSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//value=STRING
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_9_0() { return cValueSTRINGTerminalRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_11() { return cOnConditionKeyword_11; }
		
		//condition=STRING
		public Assignment getConditionAssignment_12() { return cConditionAssignment_12; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_12_0() { return cConditionSTRINGTerminalRuleCall_12_0; }
	}
	public class GooglecalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Googlecal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGooglecalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cForCalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCalidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCalidSTRINGTerminalRuleCall_4_0 = (RuleCall)cCalidAssignment_4.eContents().get(0);
		private final Keyword cSecuredByKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAuthstoreAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAuthstoreSTRINGTerminalRuleCall_6_0 = (RuleCall)cAuthstoreAssignment_6.eContents().get(0);
		private final Keyword cThroughUserKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUseraccountAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUseraccountSTRINGTerminalRuleCall_8_0 = (RuleCall)cUseraccountAssignment_8.eContents().get(0);
		private final Keyword cWithTitleKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTitleAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTitleSTRINGTerminalRuleCall_10_0 = (RuleCall)cTitleAssignment_10.eContents().get(0);
		private final Keyword cFromKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cStartAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cStartSTRINGTerminalRuleCall_12_0 = (RuleCall)cStartAssignment_12.eContents().get(0);
		private final Keyword cToKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cEndAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cEndSTRINGTerminalRuleCall_14_0 = (RuleCall)cEndAssignment_14.eContents().get(0);
		private final Keyword cRepeatKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cNotifyAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cNotifySTRINGTerminalRuleCall_16_0 = (RuleCall)cNotifyAssignment_16.eContents().get(0);
		private final Keyword cUsingKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cLeftCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cValueAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cValueSTRINGTerminalRuleCall_19_0 = (RuleCall)cValueAssignment_19.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cOnConditionKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cConditionAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cConditionSTRINGTerminalRuleCall_22_0 = (RuleCall)cConditionAssignment_22.eContents().get(0);
		
		//Googlecal:
		//	'googlecal' 'as' name=STRING 'for-cal' calid=STRING 'secured-by' authstore=STRING 'through-user' useraccount=STRING
		//	'with-title' title=STRING 'from' start=STRING 'to' end=STRING 'repeat'
		//	notify=STRING 'using'
		//	'{'
		//	value=STRING
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'googlecal' 'as' name=STRING 'for-cal' calid=STRING 'secured-by' authstore=STRING 'through-user' useraccount=STRING
		//'with-title' title=STRING 'from' start=STRING 'to' end=STRING 'repeat' notify=STRING 'using' '{' value=STRING '}'
		//'on-condition' condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'googlecal'
		public Keyword getGooglecalKeyword_0() { return cGooglecalKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'for-cal'
		public Keyword getForCalKeyword_3() { return cForCalKeyword_3; }
		
		//calid=STRING
		public Assignment getCalidAssignment_4() { return cCalidAssignment_4; }
		
		//STRING
		public RuleCall getCalidSTRINGTerminalRuleCall_4_0() { return cCalidSTRINGTerminalRuleCall_4_0; }
		
		//'secured-by'
		public Keyword getSecuredByKeyword_5() { return cSecuredByKeyword_5; }
		
		//authstore=STRING
		public Assignment getAuthstoreAssignment_6() { return cAuthstoreAssignment_6; }
		
		//STRING
		public RuleCall getAuthstoreSTRINGTerminalRuleCall_6_0() { return cAuthstoreSTRINGTerminalRuleCall_6_0; }
		
		//'through-user'
		public Keyword getThroughUserKeyword_7() { return cThroughUserKeyword_7; }
		
		//useraccount=STRING
		public Assignment getUseraccountAssignment_8() { return cUseraccountAssignment_8; }
		
		//STRING
		public RuleCall getUseraccountSTRINGTerminalRuleCall_8_0() { return cUseraccountSTRINGTerminalRuleCall_8_0; }
		
		//'with-title'
		public Keyword getWithTitleKeyword_9() { return cWithTitleKeyword_9; }
		
		//title=STRING
		public Assignment getTitleAssignment_10() { return cTitleAssignment_10; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_10_0() { return cTitleSTRINGTerminalRuleCall_10_0; }
		
		//'from'
		public Keyword getFromKeyword_11() { return cFromKeyword_11; }
		
		//start=STRING
		public Assignment getStartAssignment_12() { return cStartAssignment_12; }
		
		//STRING
		public RuleCall getStartSTRINGTerminalRuleCall_12_0() { return cStartSTRINGTerminalRuleCall_12_0; }
		
		//'to'
		public Keyword getToKeyword_13() { return cToKeyword_13; }
		
		//end=STRING
		public Assignment getEndAssignment_14() { return cEndAssignment_14; }
		
		//STRING
		public RuleCall getEndSTRINGTerminalRuleCall_14_0() { return cEndSTRINGTerminalRuleCall_14_0; }
		
		//'repeat'
		public Keyword getRepeatKeyword_15() { return cRepeatKeyword_15; }
		
		//notify=STRING
		public Assignment getNotifyAssignment_16() { return cNotifyAssignment_16; }
		
		//STRING
		public RuleCall getNotifySTRINGTerminalRuleCall_16_0() { return cNotifySTRINGTerminalRuleCall_16_0; }
		
		//'using'
		public Keyword getUsingKeyword_17() { return cUsingKeyword_17; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_18() { return cLeftCurlyBracketKeyword_18; }
		
		//value=STRING
		public Assignment getValueAssignment_19() { return cValueAssignment_19; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_19_0() { return cValueSTRINGTerminalRuleCall_19_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_21() { return cOnConditionKeyword_21; }
		
		//condition=STRING
		public Assignment getConditionAssignment_22() { return cConditionAssignment_22; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_22_0() { return cConditionSTRINGTerminalRuleCall_22_0; }
	}
	public class CopydataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Copydata");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCopydataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cUsingKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueSelectStatementParserRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cOnConditionKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConditionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConditionSTRINGTerminalRuleCall_12_0 = (RuleCall)cConditionAssignment_12.eContents().get(0);
		
		//Copydata:
		//	'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'using' '{' value=SelectStatement '}' 'on-condition'
		//condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'copydata'
		public Keyword getCopydataKeyword_0() { return cCopydataKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'using'
		public Keyword getUsingKeyword_7() { return cUsingKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_9_0() { return cValueSelectStatementParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_11() { return cOnConditionKeyword_11; }
		
		//condition=STRING
		public Assignment getConditionAssignment_12() { return cConditionAssignment_12; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_12_0() { return cConditionSTRINGTerminalRuleCall_12_0; }
	}
	public class WriteCsvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.WriteCsv");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWritecsvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cWithKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDelimAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDelimSTRINGTerminalRuleCall_8_0 = (RuleCall)cDelimAssignment_8.eContents().get(0);
		private final Keyword cUsingKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionSTRINGTerminalRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//WriteCsv:
		//	'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using' '{' value=SelectStatement
		//'}' 'on-condition' condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'writecsv'
		public Keyword getWritecsvKeyword_0() { return cWritecsvKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'with'
		public Keyword getWithKeyword_7() { return cWithKeyword_7; }
		
		//delim=STRING
		public Assignment getDelimAssignment_8() { return cDelimAssignment_8; }
		
		//STRING
		public RuleCall getDelimSTRINGTerminalRuleCall_8_0() { return cDelimSTRINGTerminalRuleCall_8_0; }
		
		//'using'
		public Keyword getUsingKeyword_9() { return cUsingKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=STRING
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_14_0() { return cConditionSTRINGTerminalRuleCall_14_0; }
	}
	public class LoadCsvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.LoadCsv");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoadcsvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToSTRINGTerminalRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		private final Keyword cWithKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDelimAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDelimSTRINGTerminalRuleCall_8_0 = (RuleCall)cDelimAssignment_8.eContents().get(0);
		private final Keyword cUsingKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValueAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValueSelectStatementParserRuleCall_11_0 = (RuleCall)cValueAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cOnConditionKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionSTRINGTerminalRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		
		//LoadCsv:
		//	'loadcsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
		//	'{'
		//	value=SelectStatement
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'loadcsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using' '{' value=SelectStatement '}'
		//'on-condition' condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'loadcsv'
		public Keyword getLoadcsvKeyword_0() { return cLoadcsvKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//source=STRING
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_4_0() { return cSourceSTRINGTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=STRING
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_6_0() { return cToSTRINGTerminalRuleCall_6_0; }
		
		//'with'
		public Keyword getWithKeyword_7() { return cWithKeyword_7; }
		
		//delim=STRING
		public Assignment getDelimAssignment_8() { return cDelimAssignment_8; }
		
		//STRING
		public RuleCall getDelimSTRINGTerminalRuleCall_8_0() { return cDelimSTRINGTerminalRuleCall_8_0; }
		
		//'using'
		public Keyword getUsingKeyword_9() { return cUsingKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//value=SelectStatement
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }
		
		//SelectStatement
		public RuleCall getValueSelectStatementParserRuleCall_11_0() { return cValueSelectStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_13() { return cOnConditionKeyword_13; }
		
		//condition=STRING
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_14_0() { return cConditionSTRINGTerminalRuleCall_14_0; }
	}
	public class TransformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.Transform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransformKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnSTRINGTerminalRuleCall_4_0 = (RuleCall)cOnAssignment_4.eContents().get(0);
		private final Keyword cUsingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueNonSelectStatementParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOnConditionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionSTRINGTerminalRuleCall_10_0 = (RuleCall)cConditionAssignment_10.eContents().get(0);
		
		//Transform:
		//	'transform' 'as' name=STRING 'on' on=STRING 'using'
		//	'{'
		//	value+=NonSelectStatement
		//	'}' 'on-condition' condition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'transform' 'as' name=STRING 'on' on=STRING 'using' '{' value+=NonSelectStatement '}' 'on-condition' condition=STRING
		public Group getGroup() { return cGroup; }
		
		//'transform'
		public Keyword getTransformKeyword_0() { return cTransformKeyword_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//on=STRING
		public Assignment getOnAssignment_4() { return cOnAssignment_4; }
		
		//STRING
		public RuleCall getOnSTRINGTerminalRuleCall_4_0() { return cOnSTRINGTerminalRuleCall_4_0; }
		
		//'using'
		public Keyword getUsingKeyword_5() { return cUsingKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//value+=NonSelectStatement
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//NonSelectStatement
		public RuleCall getValueNonSelectStatementParserRuleCall_7_0() { return cValueNonSelectStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'on-condition'
		public Keyword getOnConditionKeyword_9() { return cOnConditionKeyword_9; }
		
		//condition=STRING
		public Assignment getConditionAssignment_10() { return cConditionAssignment_10; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_10_0() { return cConditionSTRINGTerminalRuleCall_10_0; }
	}
	public class SelectStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.SelectStatement");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//SelectStatement:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class NonSelectStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl.Sparrow.NonSelectStatement");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NonSelectStatement:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	
	private final ProcessElements pProcess;
	private final TryElements pTry;
	private final FinallyElements pFinally;
	private final CatchElements pCatch;
	private final ActionElements pAction;
	private final FetchElements pFetch;
	private final CallprocessElements pCallprocess;
	private final UpdatedauditElements pUpdatedaudit;
	private final SmsElements pSms;
	private final SlackElements pSlack;
	private final GooglecalElements pGooglecal;
	private final CopydataElements pCopydata;
	private final WriteCsvElements pWriteCsv;
	private final LoadCsvElements pLoadCsv;
	private final TransformElements pTransform;
	private final SelectStatementElements pSelectStatement;
	private final NonSelectStatementElements pNonSelectStatement;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SparrowGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProcess = new ProcessElements();
		this.pTry = new TryElements();
		this.pFinally = new FinallyElements();
		this.pCatch = new CatchElements();
		this.pAction = new ActionElements();
		this.pFetch = new FetchElements();
		this.pCallprocess = new CallprocessElements();
		this.pUpdatedaudit = new UpdatedauditElements();
		this.pSms = new SmsElements();
		this.pSlack = new SlackElements();
		this.pGooglecal = new GooglecalElements();
		this.pCopydata = new CopydataElements();
		this.pWriteCsv = new WriteCsvElements();
		this.pLoadCsv = new LoadCsvElements();
		this.pTransform = new TransformElements();
		this.pSelectStatement = new SelectStatementElements();
		this.pNonSelectStatement = new NonSelectStatementElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.etl.Sparrow".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Process:
	//	'process' name=STRING
	//	'{'
	//	try=Try
	//	catch=Catch
	//	finally=Finally
	//	'}';
	public ProcessElements getProcessAccess() {
		return pProcess;
	}
	
	public ParserRule getProcessRule() {
		return getProcessAccess().getRule();
	}
	
	//Try:
	//	'try' name=ID
	//	'{'
	//	action+=Action*
	//	'}';
	public TryElements getTryAccess() {
		return pTry;
	}
	
	public ParserRule getTryRule() {
		return getTryAccess().getRule();
	}
	
	//Finally:
	//	'finally' name=ID
	//	'{'
	//	action+=Action*
	//	'}';
	public FinallyElements getFinallyAccess() {
		return pFinally;
	}
	
	public ParserRule getFinallyRule() {
		return getFinallyAccess().getRule();
	}
	
	//Catch:
	//	'catch' name=ID
	//	'{'
	//	action+=Action*
	//	'}';
	public CatchElements getCatchAccess() {
		return pCatch;
	}
	
	public ParserRule getCatchRule() {
		return getCatchAccess().getRule();
	}
	
	//Action:
	//	Copydata
	//	| LoadCsv
	//	| WriteCsv
	//	| Transform
	//	| Googlecal
	//	| Slack
	//	| Sms
	//	| Updatedaudit
	//	| Callprocess
	//	| Fetch;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Fetch:
	//	'assign' 'as' name=STRING 'source' source=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=STRING;
	public FetchElements getFetchAccess() {
		return pFetch;
	}
	
	public ParserRule getFetchRule() {
		return getFetchAccess().getRule();
	}
	
	//Callprocess:
	//	'callprocess' 'as' name=STRING 'target' target=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=STRING;
	public CallprocessElements getCallprocessAccess() {
		return pCallprocess;
	}
	
	public ParserRule getCallprocessRule() {
		return getCallprocessAccess().getRule();
	}
	
	//Updatedaudit:
	//	'log' 'as' name=STRING 'logto' logsink=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}';
	public UpdatedauditElements getUpdatedauditAccess() {
		return pUpdatedaudit;
	}
	
	public ParserRule getUpdatedauditRule() {
		return getUpdatedauditAccess().getRule();
	}
	
	//Sms:
	//	'sms' 'as' name=STRING 'for' target=STRING 'using'
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=STRING;
	public SmsElements getSmsAccess() {
		return pSms;
	}
	
	public ParserRule getSmsRule() {
		return getSmsAccess().getRule();
	}
	
	//Slack:
	//	'slack' 'as' name=STRING 'to' team=STRING 'on' channel=STRING 'using'
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=STRING;
	public SlackElements getSlackAccess() {
		return pSlack;
	}
	
	public ParserRule getSlackRule() {
		return getSlackAccess().getRule();
	}
	
	//Googlecal:
	//	'googlecal' 'as' name=STRING 'for-cal' calid=STRING 'secured-by' authstore=STRING 'through-user' useraccount=STRING
	//	'with-title' title=STRING 'from' start=STRING 'to' end=STRING 'repeat'
	//	notify=STRING 'using'
	//	'{'
	//	value=STRING
	//	'}' 'on-condition' condition=STRING;
	public GooglecalElements getGooglecalAccess() {
		return pGooglecal;
	}
	
	public ParserRule getGooglecalRule() {
		return getGooglecalAccess().getRule();
	}
	
	//Copydata:
	//	'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=STRING;
	public CopydataElements getCopydataAccess() {
		return pCopydata;
	}
	
	public ParserRule getCopydataRule() {
		return getCopydataAccess().getRule();
	}
	
	//WriteCsv:
	//	'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=STRING;
	public WriteCsvElements getWriteCsvAccess() {
		return pWriteCsv;
	}
	
	public ParserRule getWriteCsvRule() {
		return getWriteCsvAccess().getRule();
	}
	
	//LoadCsv:
	//	'loadcsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
	//	'{'
	//	value=SelectStatement
	//	'}' 'on-condition' condition=STRING;
	public LoadCsvElements getLoadCsvAccess() {
		return pLoadCsv;
	}
	
	public ParserRule getLoadCsvRule() {
		return getLoadCsvAccess().getRule();
	}
	
	//Transform:
	//	'transform' 'as' name=STRING 'on' on=STRING 'using'
	//	'{'
	//	value+=NonSelectStatement
	//	'}' 'on-condition' condition=STRING;
	public TransformElements getTransformAccess() {
		return pTransform;
	}
	
	public ParserRule getTransformRule() {
		return getTransformAccess().getRule();
	}
	
	//SelectStatement:
	//	STRING;
	public SelectStatementElements getSelectStatementAccess() {
		return pSelectStatement;
	}
	
	public ParserRule getSelectStatementRule() {
		return getSelectStatementAccess().getRule();
	}
	
	//NonSelectStatement:
	//	STRING;
	public NonSelectStatementElements getNonSelectStatementAccess() {
		return pNonSelectStatement;
	}
	
	public ParserRule getNonSelectStatementRule() {
		return getNonSelectStatementAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
